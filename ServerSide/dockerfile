# # # 1. Use the official Golang image as the base image latest version
# # FROM golang:latest as build

# # # 2. Set the working directory inside the container
# # WORKDIR /app

# # # 3. Copy go.mod and go.sum files to the working directory
# # COPY go.mod go.sum ./

# # # 4. Download dependencies
# # RUN go mod download

# # # 5. Copy the entire project to the working directory
# # COPY . .

# # # 6. Build the Golang application
# # RUN go build -o main .

# # # 7. Use a minimal image to run the built application
# # FROM alpine:latest

# # # 8. Set the working directory inside the container
# # WORKDIR /root/

# # # 9. Copy the built application from the build stage
# # COPY --from=build /app/main .

# # # 10. Expose the application port
# # EXPOSE 8080

# # # 11. Set the entry point to start the application
# # CMD ["./main"]

# # ベースイメージとしてGoを使用
# FROM golang:1.22.0-alpine

# # 作業ディレクトリを設定
# WORKDIR /app

# # Goモジュールとソースコードをコピー
# COPY go.mod ./
# COPY go.sum ./
# RUN go mod download

# COPY . .

# # アプリケーションをビルド
# RUN go build -o main .

# # アプリケーションを実行
# CMD ["go", "run", "main.go"]

FROM golang:1.22.0-alpine AS builder
WORKDIR /app
COPY go.mod go.sum ./
RUN go mod download
COPY . .
RUN CGO_ENABLED=0 GOOS=linux go build -o main .

FROM alpine:latest
WORKDIR /root/
COPY --from=builder /app/main .
CMD ["./main"]